plugins {
    id 'java'
}

group 'com.sherlockcodes'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
task generateFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.sherlockcodes.moneytransfer.TransferApp'
    }
    baseName = 'money-transfer-demo'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task startApp(type: JavaExec) {
    main = "com.sherlockcodes.moneytransfer.TransferApp"
    description = "Start Spark server"
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'com.sparkjava:spark-core:2.9.0'
    compile 'com.google.inject:guice:4.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.projectlombok:lombok:1.18.4'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.google.code.gson:gson:2.8.5'
    testCompile 'io.rest-assured:rest-assured:3.0.2'
    testCompile 'org.mockito:mockito-core:3.0.0'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testImplementation 'org.mockito:mockito-core:3.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.2.0'
    testCompile 'com.sparkjava:spark-core:2.9.0'



}
test {
    useJUnitPlatform()
}



tasks.withType(Test) {
    testLogging {
        events "passed", "failed"
    }
}

